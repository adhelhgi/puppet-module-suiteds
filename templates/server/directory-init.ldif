<%- 
  config = scope.to_hash
  config = scope.parent.to_hash if ! config.has_key?( 'servers' )

  admin_ou = ""
  krb_ou   = ""
  config['db_mapping'].each do |line|
    key, ou = line.split( /\s*:\s*/ ).values_at( 0, 4 )
    if key == 'admin'
      admin_ou = 'ou=' + ou + ','
    elsif key == 'kerberos'
      krb_ou = 'ou=' + ou + ','
    end
  end

  krb_write_cn = 'cn=' + config['krb_ldap_write'] + ',' + admin_ou
  krb_read_cn  = 'cn=' + config['krb_ldap_read']  + ',' + admin_ou

  db_id = 0
  [ config['domains'] ].flatten.each do |domain|
    base_dn = domain.split( '.' ).map{ |part| part = 'dc=' + part }.join( ',' )
    db_id += 1
    directory = "#{config['ldap_path']}/#{domain}"
-%>
dn: olcDatabase=hdb,cn=config
objectClass: olcDatabaseConfig
objectClass: olcHdbConfig
olcDatabase: hdb
olcDbDirectory: <%= directory %>
olcSuffix: <%= base_dn %>
olcRootDN: <%= base_dn %>
olcRootPW: <%= scope.function_template( 'suiteds/encrypt-password.erb' ) %>
olcAccess: to *
  by dn.exact=gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth manage
  by dn.exact=cn=<%= config['admin_user'] %>,<%= base_dn %> manage
  by * break
olcAccess: to dn.subtree="<%= krb_ou + base_dn %>"
  by ssf=<%= config['ssl_minimum'] %> dn.exact=<%= krb_write_cn %><%= base_dn %> write
  by ssf=<%= config['ssl_minimum'] %> dn.exact=<%= krb_read_cn %><%= base_dn %> read
  by * none
olcAccess: to attrs=userPassword,shadowLastChange,krbPrincipalKey,userPKCS12
  by ssf=<%= config['ssl_minimum'] %> self write
  by ssf=<%= config['ssl_minimum'] %> dn.exact=<%= krb_write_cn %><%= base_dn %> write
  by ssf=<%= config['ssl_minimum'] %> dn.exact=<%= krb_read_cn %><%= base_dn %> read
  by ssf=<%= config['ssl_minimum'] %> anonymous auth
  by * none
olcAccess: to dn.base="" by ssf=<%= config['ssl_minimum'] %> * read
olcAccess: to *
  by ssf=<%= config['ssl_minimum'] %> self write
  by ssf=<%= config['ssl_minimum'] %> * read
olcDbConfig: set_cachesize 0 2097152 0
olcDbConfig: set_lk_max_objects 1500
olcDbConfig: set_lk_max_locks 1500
olcDbConfig: set_lk_max_lockers 1500
olcDbIndex: uid,gidNumber,sambasid,uidNumber pres,eq
olcDbIndex: cn,sn,mail,givenName,memberUid pres,eq,approx,sub
olcDbIndex: objectClass,entryCSN,entryUUID,ou eq
olcDbIndex: apple-group-realname,apple-realname pres,eq,approx,sub
olcDbIndex: apple-generateduid,apple-group-memberguid,apple-ownerguid pres,eq
olcDbIndex: krbPrincipalName eq,pres,sub


<% if config['servers'].length > 1 -%>
<% sid = 0 -%>
<% scope.function_template( 'suiteds/generate-remote-uris.erb' ).split( /\s+/ ).each do |uri| -%>
olcSyncRepl: rid=<%= sid += 1 %> provider=<%= uri %> binddn=<%= base_dn %> bindmethod=simple
  credentials=<%= password %> searchbase=<%= base_dn %> type=refreshAndPersist
  tls_reqcert=<%= config['ssl_verify_certs'] %> retry="5 5 300 5" timeout=1
<% end -%>
olcMonitoring: FALSE
olcLastMod: TRUE
olcMirrorMode: TRUE

dn: olcOverlay=syncprov,olcDatabase={<%= db_id %>}hdb,cn=config
objectClass: olcOverlayConfig
objectClass: olcSyncProvConfig
olcOverlay: syncprov
<% end -%>
<%
  end
-%>
