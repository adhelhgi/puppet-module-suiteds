<%- 
  config = scope.to_hash
  config = scope.parent.to_hash if ! config.has_key?( 'servers' )

  map_hash = {}
  config['ldap_map'].each do |line|
    key, ou, desc, dbs, ns_off, ns_on, ldap_scope, filter = line.split( /:/ ).map{ |x| x.to_s.strip }
    map_hash[key] = {
      'ou'     => ou,
      'desc'   => desc,
      'dbs'    => dbs,
      'ns_off' => ns_off,
      'ns_on'  => ns_on,
      'scope'  => ldap_scope,
      'filter' => filter,
    }
  end

  require 'base64'
  require 'securerandom'

  seed = 0
  if has_variable?("sshdsakey")
    seed += sshdsakey.sum
  end
  if has_variable?("sshrsakey")
    seed += sshrsakey.sum
  end
  srand( seed )
  def uuid()
    Array.new( 16 ){ rand( 256 ).chr }.join.unpack( 'H*' ).join.upcase.sub( /^(.{8})(.{4})(.{4})(.{4})(.*)$/, '\1-\2-\3-\4-\5' )
  end

  db_id = 0
  [ config['domains'] ].flatten.each do |domain|
    base_dn = domain.split( '.' ).map{ |part| part = 'dc=' + part }.join( ',' )
    db_id += 1
-%>
dn: <%= base_dn %>
objectClass: dcObject
objectClass: organizationalUnit
<%= base_dn.split(',').at(0).split('=').at(0) %>: <%= base_dn.split(',').at(0).split('=').at(1) %>
ou: <%= base_dn %>

<%
    map_hash.each do |key, value|
      next if value['ou'] == ''
      value['desc'] = value['ou'] if value['desc'] = ''
-%>
dn: ou=<%= value['ou'] %>,<%= base_dn %>
ou: <%= value['ou'] %>
objectClass: organizationalUnit
objectClass: top
description: <%= value['desc'] %>

<%
  if key == 'access'
    config['ldap_access_groups'].to_a.flatten.each do |group|
-%>
dn: cn=<%= group %>,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: groupOfNames
cn: <%= group %>
member: <%= base_dn %>

<%
    end
  elsif key == 'roles'
-%>
dn: cn=<%= config['admin_user'] %>,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: simpleSecurityObject
objectClass: organizationalRole
cn: <%= config['admin_user'] %>
description: OpenLDAP Admin Account
userPassword: <%= scope.function_template( 'suiteds/encrypt-password.erb' ) %>

dn: cn=<%= config['ldap_admin_user'] %>,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: simpleSecurityObject
objectClass: organizationalRole
cn: <%= config['ldap_admin_user'] %>
description: OpenLDAP Root Account
userPassword: <%= scope.function_template( 'suiteds/encrypt-password.erb' ) %>

dn: cn=<%= config['ldap_bind_user'] %>,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: simpleSecurityObject
objectClass: organizationalRole
cn: <%= config['ldap_bind_user'] %>
description: OpenLDAP Bind Account
userPassword: <%= scope.function_template( 'suiteds/encrypt-password.erb' ) %>

dn: cn=<%= config['krb_read_user'] %>,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: simpleSecurityObject
objectClass: organizationalRole
cn: <%= config['krb_read_user'] %>
description: Kerberos Read Account
userPassword: <%= scope.function_template( 'suiteds/encrypt-password.erb' ) %>

dn: cn=<%= config['krb_write_user'] %>,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: simpleSecurityObject
objectClass: organizationalRole
cn: <%= config['krb_write_user'] %>
description: Kerberos Write Account
userPassword: <%= scope.function_template( 'suiteds/encrypt-password.erb' ) %>

<% elsif key == 'macosx' -%>
dn: cn=accesscontrols,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: accesscontrols

dn: cn=certificateauthorities,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: certificateauthorities

dn: cn=computers,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: computers

dn: cn=computer_groups,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: computer_groups

dn: cn=computer_lists,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: computer_lists

dn: cn=config,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: config

dn: cn=locations,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: locations

dn: cn=machines,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: machines

dn: cn=neighborhoods,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: neighborhoods

dn: cn=people,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: people

dn: cn=presets_computer_lists,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: presets_computer_lists

dn: cn=presets_groups,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: presets_groups

dn: cn=preset_users,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: preset_users

dn: cn=printers,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: printers

dn: cn=augments,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: augments

dn: cn=autoserversetup,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: autoserversetup

dn: cn=filemakerservers,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: filemakerservers

dn: cn=resources,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: resources

dn: cn=places,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: places

dn: cn=maps,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: mapsts_computers,ou=<%= value['ou'] %>,<%= base_dn %>
cn: presets_computers

dn: cn=presets_computer_groups,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: presets_computer_groups

dn: cn=automountMap,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: automountMap

dn: ou=macosxodconfig,cn=config,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: organizationalUnit
ou: macosxodconfig
description:: <%= Base64.encode64( scope.function_template( 'suiteds/openldap/server/macosxodconfig.xml' ) ).split("\n").join("") %>

dn: cn=presets_computers,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: container
cn: presets_computers

dn: cn=CIFSServer,cn=config,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: apple-configuration
objectClass: top
cn: CIFSServer

dn: cn=mcx_cache,cn=config,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: apple-configuration
objectClass: top
cn: mcx_cache

dn: cn=ldapreplicas,cn=config,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: apple-configuration
objectClass: top
cn: ldapreplicas

dn: cn=passwordserver,cn=config,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: apple-configuration
objectClass: top
cn: passwordserver

dn: cn=macosxodpolicy,cn=config,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: apple-configuration
objectClass: top
cn: macosxodpolicy

dn: cn=CollabServices,cn=config,ou=<%= value['ou'] %>,<%= base_dn %>
objectClass: apple-configuration
objectClass: top
cn: CollabServices

<% end -%>
<%
    end
  end
-%>
